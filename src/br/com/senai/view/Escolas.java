/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.senai.view;

import br.com.senai.util.Config;
import br.com.senai.dao.EscolaDAO;
import br.com.senai.entities.Escola;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Hugo
 */
public class Escolas extends javax.swing.JFrame {

    /**
     * Creates new form Opcoes
     */
    public Escolas() {
        initComponents();

        Config.configurarJanela(this);
        carregarInformacoes();
        iconRelatorio.setIcon(new ImageIcon(new ImageIcon("imagens/icones/8.png").getImage().getScaledInstance(43, 43, Image.SCALE_SMOOTH)));

    }

    public void atualizarPainelEscolas() {
        GridLayout layout = new GridLayout(0, 1, 2, 3);
        painelEscolas.removeAll();

        painelEscolas.setLayout(layout);

        for (final Escola escola : new EscolaDAO().escolasPermitidas(Config.usuario)) {
            painelEscolas.add(new JCheckBox(new AbstractAction(escola.getNome(), null) {

                @Override
                public void actionPerformed(ActionEvent e) {
                    System.out.println(escola.getNome());
                }
            }) {

                @Override
                public void setLabel(String label) {
                    super.setLabel(escola.getNome()); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void setName(String name) {
                    super.setName(escola.getNome()); //To change body of generated methods, choose Tools | Templates.
                }
            });
        }

        painelEscolas.revalidate();
        painelEscolas.repaint();

    }

    private void carregarInformacoes() {

        GridLayout layout = new GridLayout(0 , 1, 1, 1);
        painelEscolas.removeAll();

        painelEscolas.setLayout(layout);

        for (final Escola escola : new EscolaDAO().escolasPermitidas(Config.usuario)) {
            painelEscolas.add(new JCheckBox(escola.getNome(), false));
        }

        List<String> linhas = null;

        try {
            linhas = Files.readAllLines(Paths.get("escolas.txt"), StandardCharsets.UTF_8);
        } catch (IOException ex) {
            try {
                Files.write(Paths.get("escolas.txt"), "".getBytes("utf-8"), StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);
                linhas = Files.readAllLines(Paths.get("escolas.txt"), StandardCharsets.UTF_8);
            } catch (UnsupportedEncodingException ex1) {
                Logger.getLogger(Escolas.class.getName()).log(Level.SEVERE, null, ex1);
            } catch (IOException ex1) {
                Logger.getLogger(Escolas.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }

        for (String linha : linhas) {
            String[] split = linha.split(";");

            for (String palavra : split) {

                for (Component component : painelEscolas.getComponents()) {

                    if (component instanceof JCheckBox) {

                        if (palavra.equalsIgnoreCase(((JCheckBox) component).getText())) {
                            ((JCheckBox) component).setSelected(true);
                        }

                    }
                }

            }
        }

        painelEscolas.revalidate();
        painelEscolas.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        bSalvar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        painelEscolas = new javax.swing.JPanel();
        iconRelatorio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Escolas -");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Escolas permitidas");
        jLabel4.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Configurar escolas permitidas:");

        bSalvar.setText("Salvar");
        bSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);

        painelEscolas.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout painelEscolasLayout = new javax.swing.GroupLayout(painelEscolas);
        painelEscolas.setLayout(painelEscolasLayout);
        painelEscolasLayout.setHorizontalGroup(
            painelEscolasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        painelEscolasLayout.setVerticalGroup(
            painelEscolasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 118, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(painelEscolas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(140, 140, 140)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(iconRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel4))
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(iconRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarActionPerformed
        String texto = "";

        try {

            for (Component c : painelEscolas.getComponents()) {

                if (c instanceof JCheckBox) {
                    if (((JCheckBox) c).isSelected()) {
                        texto += ((JCheckBox) c).getText() + ";";
                    }
                }

            }

            Files.write(Paths.get("escolas.txt"), (texto).getBytes("utf-8"), StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);
            JOptionPane.showMessageDialog(null, "Salvo com sucesso!", "Resposta", JOptionPane.INFORMATION_MESSAGE);
            dispose();

        } catch (IOException ex) {
            Logger.getLogger(Escolas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_bSalvarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bSalvar;
    private javax.swing.JLabel iconRelatorio;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel painelEscolas;
    // End of variables declaration//GEN-END:variables
}
