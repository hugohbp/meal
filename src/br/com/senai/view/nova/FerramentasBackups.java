/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.senai.view.nova;

import br.com.senai.util.Config;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Window;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author Hugo
 */
public class FerramentasBackups extends javax.swing.JPanel {

    final JFrame frame = new JFrame();

    public FerramentasBackups() {

        frame.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
        frame.setType(Window.Type.UTILITY);
        frame.setUndecorated(true);

        frame.addWindowFocusListener(new WindowAdapter() {
            @Override
            public void windowLostFocus(WindowEvent e) {
                frame.dispose();
            }
        });
        frame.setPreferredSize(new Dimension(150, 100));
        frame.setSize(new Dimension(200, 30));
        frame.setLayout(new GridLayout(0, 1));

        frame.repaint();
        frame.revalidate();

        initComponents();
        Config.configurarPainel(this);

        jPanel1.removeAll();
        jPanel1.setLayout(new GridLayout(0, 1));

        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile()) {
                final String nomeArquivo = listOfFiles[i].getName();
                jPanel1.add(new JLabelSimples(listOfFiles[i].getName(), new MouseAdapter() {

                    @Override
                    public void mouseClicked(MouseEvent e) {
                        frame.getContentPane().setBackground(Color.white);
                        frame.getContentPane().removeAll();
                        frame.getContentPane().add(new JLabelSimples("Restaurar", Color.WHITE, new MouseAdapter() {

                            @Override
                            public void mouseClicked(MouseEvent e) {

                                if (Config.mensagemDeConfirmacaoExclusao("Deseja realmente restaurar esse backup: " + nomeArquivo + "?") == JOptionPane.YES_OPTION) {
                                    try {

                                        Runtime.getRuntime().exec("cmd /c mysqldump -u" + Config.usuarioBD + " -p" + Config.senhaBD + " -h" + Config.urlBD + " --database " + Config.NOME_BANCO_DE_DADOS + " >  backups/" + Config.formatarData(new Date()) + ".." + Config.usuario.getLogin() + ".sql");
                                        Runtime.getRuntime().exec("cmd /c  mysql -u" + Config.usuarioBD + " -p" + Config.senhaBD + " -h" + Config.urlBD + "  <  backups/" + nomeArquivo);
                                        Config.mensagemInformativa("RESTAURAÇÃO REALIZADA COM SUCESSO!!");

                                    } catch (IOException ex) {
                                        Config.mensagemDeErro(ex.getMessage());
                                    }
                                }
                            }

                            @Override
                            public void mousePressed(MouseEvent e) {
                                e.getComponent().setBackground(new Color(240, 240, 240));
                                e.getComponent().repaint();
                                e.getComponent().revalidate();
                            }

                            @Override
                            public void mouseEntered(MouseEvent e) {
                                e.getComponent().setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                            }

                        }));
                        frame.setLocation(e.getLocationOnScreen());
                        frame.setVisible(true);
                    }
                }));
            }

        }

        jPanel1.repaint();
        jPanel1.revalidate();
    }
    File folder = new File("backups");

    File[] listOfFiles = folder.listFiles(new FilenameFilter() {
        public boolean accept(File dir, String filename) {
            return filename.endsWith(".sql");
        }
    });

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Backups recentes:");

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 626, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 262, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked


    }//GEN-LAST:event_jPanel1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
